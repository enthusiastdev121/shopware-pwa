name: Deploy PR Preview on Storefrontcloud
env:
  CANARY_SW6_INSTANCE: https://shopware6-demo.vuestorefront.io
  CANARY_SW6_INSTANCE_TOKEN: SWSCVJJET0RQAXFNBMTDZTV1OQ
  INSTANCE_CODE: shopware-pwa-canary
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Build packages
        run: |
          yarn
          yarn build --ci
      - name: Create theme project
        run: |
          mkdir test-project
          cd ./test-project
          ../packages/cli/bin/shopware-pwa init --shopwareEndpoint=${{ env.CANARY_SW6_INSTANCE }} --shopwareAccessToken=${{ env.CANARY_SW6_INSTANCE_TOKEN }} --u ${{ secrets.SHOPWARE_ADMIN_USER }} --p ${{ secrets.SHOPWARE_ADMIN_PASSWORD }} --ci --devMode --stage local
          yarn build
      - name: Build and publish docker image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: shopware-pwa-storefrontcloud-io/vue-storefront:${{ github.sha }}
          registry: registry.storefrontcloud.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          workdir: ./test-project
          buildoptions: "--compress"
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ github.token }}"
          environment: preview
          initial_status: in_progress
      - name: Deploy on Storefrontcloud.io
        id: deploy
        uses: mkucmus/storefrontcloud-preview-deploy@master
        with:
          token: "${{ github.token }}"
          namespace: "${{env.INSTANCE_CODE}}"
      - name: Comment PR
        if: success()
        uses: mkucmus/storefrontcloud-comment-pr-preview-deploy@master
        with:
          preview_url: "${{ steps.deploy.outputs.preview_url }}"
          token: "${{ github.token }}"
          namespace: "${{env.INSTANCE_CODE}}"
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: ${{ steps.deploy.outputs.preview_url }}
          state: "success"
          description: Congratulations! The deploy is done.
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          description: Unfortunately, the instance hasn't been updated.
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
